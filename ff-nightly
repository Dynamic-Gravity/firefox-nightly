#!/usr/bin/env bash

arch=`uname -m`
case $arch in
	"x86_64")	;;
	"i686")		;;
	*)	echo "Sorry, no firefox build available for $arch"; exit;;
esac

echo "Searching for nightly packages for Linux $arch..."
echo

result=`curl -s http://ftp.mozilla.org/pub/mozilla.org/firefox/nightly/latest-trunk/ | grep "$arch\.tar\.bz2"`

choices="`echo "$result" | perl -ne 'm/<a .*?>(.*?)<\/a>/; print "$1\n"'`"
dates="`echo "$result" | perl -ne 'm/<a .*?>.*?<\/a><\/td><.*?>(.*?)\s+<\/td>/; print "$1\n"' | sed -r 's/\s/-/g'`"
sizes="`echo "$result" | perl -ne 'm/<a .*?>.*?<\/a><\/td><.*?>.*?\s+<\/td><.*?>\s+(.*?)</; print "$1\n"'`"

pkgcount=`echo "$choices" | grep -c 'firefox'`

packages=($choices)
sizes=($sizes)
dates=($dates)

echo "Found $pkgcount matching packages"
echo

while true; do
	echo "Available packages:"
	echo

	ctr="0"

	for pkg in $choices; do
		echo -e "\t$ctr) $pkg\t[${dates[$ctr]}]\t(${sizes[$ctr]})"
		let "ctr += 1"
	done

	echo "	q) quit."
	echo

	read -p "Make a selection > " answer

	case $answer in
		[0-9]*	)
				if [ "$answer" -ge "$pkgcount" ]
				then
					echo "Invalid selection"
				else
					selection=${packages["$answer"]}
					break ;
				fi
			;;
		[Qq]	) echo "Quitting..."; exit ; ;;
		* 	) echo "Invalid selection" ;;
	esac

done

echo "Selecting package $selection..."
echo

read -p "Install location [/opt/firefox-nightly/] > " path
path=${path:-"/opt/firefox-nightly/"}

mkdir -p "$path/firefox-nightly" || exit

cd "$path/firefox-nightly"

echo
echo "Dowloading $selection to $path"
curl "http://ftp.mozilla.org/pub/mozilla.org/firefox/nightly/latest-trunk/$selection" -o "$selection" || exit

echo
echo "Unpacking $selection"
tar xjf "$selection"
echo
if [[ $EUID -ne 0 ]]; then
        echo "Need to be root to symlink"
fi

sudo ln -sf "$PWD/firefox/firefox" "/usr/bin/firefox-nightly" || exit
sudo -k

echo "Symlinked to /usr/bin/firefox-nightly"
echo

echo "Installed. Firefox-nightly may now be run by running /usr/bin/firefox-nightly"
